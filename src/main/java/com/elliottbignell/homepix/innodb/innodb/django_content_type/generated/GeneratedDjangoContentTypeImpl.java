package com.elliottbignell.homepix.innodb.innodb.django_content_type.generated;

import com.elliottbignell.homepix.innodb.innodb.django_content_type.DjangoContentType;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;

import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.elliottbignell.homepix.innodb.innodb.django_content_type.DjangoContentType}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedDjangoContentTypeImpl implements DjangoContentType {
    
    private Byte id;
    private String appLabel;
    private String model;
    
    protected GeneratedDjangoContentTypeImpl() {}
    
    @Override
    public Optional<Byte> getId() {
        return Optional.ofNullable(id);
    }
    
    @Override
    public Optional<String> getAppLabel() {
        return Optional.ofNullable(appLabel);
    }
    
    @Override
    public Optional<String> getModel() {
        return Optional.ofNullable(model);
    }
    
    @Override
    public DjangoContentType setId(Byte id) {
        this.id = id;
        return this;
    }
    
    @Override
    public DjangoContentType setAppLabel(String appLabel) {
        this.appLabel = appLabel;
        return this;
    }
    
    @Override
    public DjangoContentType setModel(String model) {
        this.model = model;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "       + Objects.toString(OptionalUtil.unwrap(getId())));
        sj.add("appLabel = " + Objects.toString(OptionalUtil.unwrap(getAppLabel())));
        sj.add("model = "    + Objects.toString(OptionalUtil.unwrap(getModel())));
        return "DjangoContentTypeImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof DjangoContentType)) { return false; }
        final DjangoContentType thatDjangoContentType = (DjangoContentType)that;
        if (!Objects.equals(this.getId(), thatDjangoContentType.getId())) { return false; }
        if (!Objects.equals(this.getAppLabel(), thatDjangoContentType.getAppLabel())) { return false; }
        if (!Objects.equals(this.getModel(), thatDjangoContentType.getModel())) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getId()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getAppLabel()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getModel()));
        return hash;
    }
}