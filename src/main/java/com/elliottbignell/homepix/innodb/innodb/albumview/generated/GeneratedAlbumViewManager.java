package com.elliottbignell.homepix.innodb.innodb.albumview.generated;

import com.elliottbignell.homepix.innodb.innodb.albumview.AlbumView;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.Manager;
import com.speedment.runtime.field.Field;

import java.util.List;

import static java.util.Arrays.asList;
import static java.util.Collections.unmodifiableList;

/**
 * The generated base interface for the manager of every {@link
 * com.elliottbignell.homepix.innodb.innodb.albumview.AlbumView} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedAlbumViewManager extends Manager<AlbumView> {
    
    TableIdentifier<AlbumView> IDENTIFIER = TableIdentifier.of("innodb", "innodb", "AlbumView");
    List<Field<AlbumView>> FIELDS = unmodifiableList(asList(
        AlbumView.ID,
        AlbumView.ALBUM_ID,
        AlbumView.ENTRY_ID,
        AlbumView.ID1,
        AlbumView.FILE,
        AlbumView.TITLE,
        AlbumView.SORTKEY,
        AlbumView.ADDED_ON,
        AlbumView.TAKEN_ON,
        AlbumView.LAST_MODIFIED,
        AlbumView.LOCATION,
        AlbumView.PRIMARY_CATEGORY,
        AlbumView.SECONDARY_CATEGORY,
        AlbumView.KEYWORDS_ID,
        AlbumView.PATH_ID,
        AlbumView.HITS,
        AlbumView.ID2,
        AlbumView.NAME,
        AlbumView.COUNT,
        AlbumView.THUMBNAIL_ID,
        AlbumView.HITS1
    ));
    
    @Override
    default Class<AlbumView> getEntityClass() {
        return AlbumView.class;
    }
}