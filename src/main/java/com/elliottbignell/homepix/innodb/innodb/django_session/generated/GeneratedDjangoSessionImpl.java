package com.elliottbignell.homepix.innodb.innodb.django_session.generated;

import com.elliottbignell.homepix.innodb.innodb.django_session.DjangoSession;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;

import java.sql.Timestamp;
import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.elliottbignell.homepix.innodb.innodb.django_session.DjangoSession}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedDjangoSessionImpl implements DjangoSession {
    
    private String sessionKey;
    private String sessionData;
    private Timestamp expireDate;
    
    protected GeneratedDjangoSessionImpl() {}
    
    @Override
    public Optional<String> getSessionKey() {
        return Optional.ofNullable(sessionKey);
    }
    
    @Override
    public Optional<String> getSessionData() {
        return Optional.ofNullable(sessionData);
    }
    
    @Override
    public Optional<Timestamp> getExpireDate() {
        return Optional.ofNullable(expireDate);
    }
    
    @Override
    public DjangoSession setSessionKey(String sessionKey) {
        this.sessionKey = sessionKey;
        return this;
    }
    
    @Override
    public DjangoSession setSessionData(String sessionData) {
        this.sessionData = sessionData;
        return this;
    }
    
    @Override
    public DjangoSession setExpireDate(Timestamp expireDate) {
        this.expireDate = expireDate;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("sessionKey = "  + Objects.toString(OptionalUtil.unwrap(getSessionKey())));
        sj.add("sessionData = " + Objects.toString(OptionalUtil.unwrap(getSessionData())));
        sj.add("expireDate = "  + Objects.toString(OptionalUtil.unwrap(getExpireDate())));
        return "DjangoSessionImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof DjangoSession)) { return false; }
        final DjangoSession thatDjangoSession = (DjangoSession)that;
        if (!Objects.equals(this.getSessionKey(), thatDjangoSession.getSessionKey())) { return false; }
        if (!Objects.equals(this.getSessionData(), thatDjangoSession.getSessionData())) { return false; }
        if (!Objects.equals(this.getExpireDate(), thatDjangoSession.getExpireDate())) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getSessionKey()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getSessionData()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getExpireDate()));
        return hash;
    }
}