package com.elliottbignell.homepix.innodb.innodb.homepix_album.generated;

import com.elliottbignell.homepix.innodb.innodb.homepix_album.HomePixAlbum;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;

import java.util.Objects;
import java.util.Optional;
import java.util.OptionalInt;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.elliottbignell.homepix.innodb.innodb.homepix_album.HomePixAlbum}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedHomePixAlbumImpl implements HomePixAlbum {
    
    private Byte id;
    private String name;
    private Byte count;
    private Integer thumbnailId;
    private Byte hits;
    
    protected GeneratedHomePixAlbumImpl() {}
    
    @Override
    public Optional<Byte> getId() {
        return Optional.ofNullable(id);
    }
    
    @Override
    public Optional<String> getName() {
        return Optional.ofNullable(name);
    }
    
    @Override
    public Optional<Byte> getCount() {
        return Optional.ofNullable(count);
    }
    
    @Override
    public OptionalInt getThumbnailId() {
        return OptionalUtil.ofNullable(thumbnailId);
    }
    
    @Override
    public Optional<Byte> getHits() {
        return Optional.ofNullable(hits);
    }
    
    @Override
    public HomePixAlbum setId(Byte id) {
        this.id = id;
        return this;
    }
    
    @Override
    public HomePixAlbum setName(String name) {
        this.name = name;
        return this;
    }
    
    @Override
    public HomePixAlbum setCount(Byte count) {
        this.count = count;
        return this;
    }
    
    @Override
    public HomePixAlbum setThumbnailId(Integer thumbnailId) {
        this.thumbnailId = thumbnailId;
        return this;
    }
    
    @Override
    public HomePixAlbum setHits(Byte hits) {
        this.hits = hits;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "          + Objects.toString(OptionalUtil.unwrap(getId())));
        sj.add("name = "        + Objects.toString(OptionalUtil.unwrap(getName())));
        sj.add("count = "       + Objects.toString(OptionalUtil.unwrap(getCount())));
        sj.add("thumbnailId = " + Objects.toString(OptionalUtil.unwrap(getThumbnailId())));
        sj.add("hits = "        + Objects.toString(OptionalUtil.unwrap(getHits())));
        return "HomePixAlbumImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof HomePixAlbum)) { return false; }
        final HomePixAlbum thatHomePixAlbum = (HomePixAlbum)that;
        if (!Objects.equals(this.getId(), thatHomePixAlbum.getId())) { return false; }
        if (!Objects.equals(this.getName(), thatHomePixAlbum.getName())) { return false; }
        if (!Objects.equals(this.getCount(), thatHomePixAlbum.getCount())) { return false; }
        if (!Objects.equals(this.getThumbnailId(), thatHomePixAlbum.getThumbnailId())) { return false; }
        if (!Objects.equals(this.getHits(), thatHomePixAlbum.getHits())) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getId()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getName()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getCount()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getThumbnailId()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getHits()));
        return hash;
    }
}