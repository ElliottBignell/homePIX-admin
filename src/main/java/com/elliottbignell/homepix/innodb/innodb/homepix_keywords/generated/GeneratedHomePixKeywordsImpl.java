package com.elliottbignell.homepix.innodb.innodb.homepix_keywords.generated;

import com.elliottbignell.homepix.innodb.innodb.homepix_keywords.HomePixKeywords;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;

import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.elliottbignell.homepix.innodb.innodb.homepix_keywords.HomePixKeywords}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedHomePixKeywordsImpl implements HomePixKeywords {
    
    private Short id;
    private String keywords;
    private Byte count;
    
    protected GeneratedHomePixKeywordsImpl() {}
    
    @Override
    public Optional<Short> getId() {
        return Optional.ofNullable(id);
    }
    
    @Override
    public Optional<String> getKeywords() {
        return Optional.ofNullable(keywords);
    }
    
    @Override
    public Optional<Byte> getCount() {
        return Optional.ofNullable(count);
    }
    
    @Override
    public HomePixKeywords setId(Short id) {
        this.id = id;
        return this;
    }
    
    @Override
    public HomePixKeywords setKeywords(String keywords) {
        this.keywords = keywords;
        return this;
    }
    
    @Override
    public HomePixKeywords setCount(Byte count) {
        this.count = count;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "       + Objects.toString(OptionalUtil.unwrap(getId())));
        sj.add("keywords = " + Objects.toString(OptionalUtil.unwrap(getKeywords())));
        sj.add("count = "    + Objects.toString(OptionalUtil.unwrap(getCount())));
        return "HomePixKeywordsImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof HomePixKeywords)) { return false; }
        final HomePixKeywords thatHomePixKeywords = (HomePixKeywords)that;
        if (!Objects.equals(this.getId(), thatHomePixKeywords.getId())) { return false; }
        if (!Objects.equals(this.getKeywords(), thatHomePixKeywords.getKeywords())) { return false; }
        if (!Objects.equals(this.getCount(), thatHomePixKeywords.getCount())) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getId()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getKeywords()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getCount()));
        return hash;
    }
}