package com.elliottbignell.homepix.innodb.innodb.calendarview.generated;

import com.elliottbignell.homepix.innodb.innodb.calendarview.CalendarView;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;

import java.util.Objects;
import java.util.Optional;
import java.util.OptionalInt;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.elliottbignell.homepix.innodb.innodb.calendarview.CalendarView}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedCalendarViewImpl implements CalendarView {
    
    private Integer id;
    private String file;
    private String substrTakenOn011;
    private Short count;
    
    protected GeneratedCalendarViewImpl() {}
    
    @Override
    public OptionalInt getId() {
        return OptionalUtil.ofNullable(id);
    }
    
    @Override
    public Optional<String> getFile() {
        return Optional.ofNullable(file);
    }
    
    @Override
    public Optional<String> getSubstrTakenOn011() {
        return Optional.ofNullable(substrTakenOn011);
    }
    
    @Override
    public Optional<Short> getCount() {
        return Optional.ofNullable(count);
    }
    
    @Override
    public CalendarView setId(Integer id) {
        this.id = id;
        return this;
    }
    
    @Override
    public CalendarView setFile(String file) {
        this.file = file;
        return this;
    }
    
    @Override
    public CalendarView setSubstrTakenOn011(String substrTakenOn011) {
        this.substrTakenOn011 = substrTakenOn011;
        return this;
    }
    
    @Override
    public CalendarView setCount(Short count) {
        this.count = count;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "               + Objects.toString(OptionalUtil.unwrap(getId())));
        sj.add("file = "             + Objects.toString(OptionalUtil.unwrap(getFile())));
        sj.add("substrTakenOn011 = " + Objects.toString(OptionalUtil.unwrap(getSubstrTakenOn011())));
        sj.add("count = "            + Objects.toString(OptionalUtil.unwrap(getCount())));
        return "CalendarViewImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof CalendarView)) { return false; }
        final CalendarView thatCalendarView = (CalendarView)that;
        if (!Objects.equals(this.getId(), thatCalendarView.getId())) { return false; }
        if (!Objects.equals(this.getFile(), thatCalendarView.getFile())) { return false; }
        if (!Objects.equals(this.getSubstrTakenOn011(), thatCalendarView.getSubstrTakenOn011())) { return false; }
        if (!Objects.equals(this.getCount(), thatCalendarView.getCount())) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getId()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getFile()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getSubstrTakenOn011()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getCount()));
        return hash;
    }
}