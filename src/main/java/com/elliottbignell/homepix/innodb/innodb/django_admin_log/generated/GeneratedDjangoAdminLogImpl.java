package com.elliottbignell.homepix.innodb.innodb.django_admin_log.generated;

import com.elliottbignell.homepix.innodb.innodb.django_admin_log.DjangoAdminLog;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;

import java.sql.Timestamp;
import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.elliottbignell.homepix.innodb.innodb.django_admin_log.DjangoAdminLog}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedDjangoAdminLogImpl implements DjangoAdminLog {
    
    private String id;
    private Timestamp actionTime;
    private String objectId;
    private String objectRepr;
    private String changeMessage;
    private String contentTypeId;
    private String userId;
    private String actionFlag;
    
    protected GeneratedDjangoAdminLogImpl() {}
    
    @Override
    public Optional<String> getId() {
        return Optional.ofNullable(id);
    }
    
    @Override
    public Optional<Timestamp> getActionTime() {
        return Optional.ofNullable(actionTime);
    }
    
    @Override
    public Optional<String> getObjectId() {
        return Optional.ofNullable(objectId);
    }
    
    @Override
    public Optional<String> getObjectRepr() {
        return Optional.ofNullable(objectRepr);
    }
    
    @Override
    public Optional<String> getChangeMessage() {
        return Optional.ofNullable(changeMessage);
    }
    
    @Override
    public Optional<String> getContentTypeId() {
        return Optional.ofNullable(contentTypeId);
    }
    
    @Override
    public Optional<String> getUserId() {
        return Optional.ofNullable(userId);
    }
    
    @Override
    public Optional<String> getActionFlag() {
        return Optional.ofNullable(actionFlag);
    }
    
    @Override
    public DjangoAdminLog setId(String id) {
        this.id = id;
        return this;
    }
    
    @Override
    public DjangoAdminLog setActionTime(Timestamp actionTime) {
        this.actionTime = actionTime;
        return this;
    }
    
    @Override
    public DjangoAdminLog setObjectId(String objectId) {
        this.objectId = objectId;
        return this;
    }
    
    @Override
    public DjangoAdminLog setObjectRepr(String objectRepr) {
        this.objectRepr = objectRepr;
        return this;
    }
    
    @Override
    public DjangoAdminLog setChangeMessage(String changeMessage) {
        this.changeMessage = changeMessage;
        return this;
    }
    
    @Override
    public DjangoAdminLog setContentTypeId(String contentTypeId) {
        this.contentTypeId = contentTypeId;
        return this;
    }
    
    @Override
    public DjangoAdminLog setUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
    @Override
    public DjangoAdminLog setActionFlag(String actionFlag) {
        this.actionFlag = actionFlag;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "            + Objects.toString(OptionalUtil.unwrap(getId())));
        sj.add("actionTime = "    + Objects.toString(OptionalUtil.unwrap(getActionTime())));
        sj.add("objectId = "      + Objects.toString(OptionalUtil.unwrap(getObjectId())));
        sj.add("objectRepr = "    + Objects.toString(OptionalUtil.unwrap(getObjectRepr())));
        sj.add("changeMessage = " + Objects.toString(OptionalUtil.unwrap(getChangeMessage())));
        sj.add("contentTypeId = " + Objects.toString(OptionalUtil.unwrap(getContentTypeId())));
        sj.add("userId = "        + Objects.toString(OptionalUtil.unwrap(getUserId())));
        sj.add("actionFlag = "    + Objects.toString(OptionalUtil.unwrap(getActionFlag())));
        return "DjangoAdminLogImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof DjangoAdminLog)) { return false; }
        final DjangoAdminLog thatDjangoAdminLog = (DjangoAdminLog)that;
        if (!Objects.equals(this.getId(), thatDjangoAdminLog.getId())) { return false; }
        if (!Objects.equals(this.getActionTime(), thatDjangoAdminLog.getActionTime())) { return false; }
        if (!Objects.equals(this.getObjectId(), thatDjangoAdminLog.getObjectId())) { return false; }
        if (!Objects.equals(this.getObjectRepr(), thatDjangoAdminLog.getObjectRepr())) { return false; }
        if (!Objects.equals(this.getChangeMessage(), thatDjangoAdminLog.getChangeMessage())) { return false; }
        if (!Objects.equals(this.getContentTypeId(), thatDjangoAdminLog.getContentTypeId())) { return false; }
        if (!Objects.equals(this.getUserId(), thatDjangoAdminLog.getUserId())) { return false; }
        if (!Objects.equals(this.getActionFlag(), thatDjangoAdminLog.getActionFlag())) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getId()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getActionTime()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getObjectId()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getObjectRepr()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getChangeMessage()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getContentTypeId()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getUserId()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getActionFlag()));
        return hash;
    }
}