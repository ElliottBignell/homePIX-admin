package com.elliottbignell.homepix.innodb.innodb.django_session.generated;

import com.elliottbignell.homepix.innodb.innodb.django_session.DjangoSession;
import com.elliottbignell.homepix.innodb.innodb.django_session.DjangoSessionImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

import static com.speedment.common.injector.State.RESOLVED;

/**
 * The generated Sql Adapter for a {@link
 * com.elliottbignell.homepix.innodb.innodb.django_session.DjangoSession}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedDjangoSessionSqlAdapter implements SqlAdapter<DjangoSession> {
    
    private final TableIdentifier<DjangoSession> tableIdentifier;
    
    protected GeneratedDjangoSessionSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("innodb", "innodb", "django_session");
    }
    
    protected DjangoSession apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
            .setSessionKey(  resultSet.getString(1 + offset))
            .setSessionData( resultSet.getString(2 + offset))
            .setExpireDate(  resultSet.getTimestamp(3 + offset))
            ;
    }
    
    protected DjangoSessionImpl createEntity() {
        return new DjangoSessionImpl();
    }
    
    @Override
    public TableIdentifier<DjangoSession> identifier() {
        return tableIdentifier;
    }
    
    @Override
    public SqlFunction<ResultSet, DjangoSession> entityMapper() {
        return entityMapper(0);
    }
    
    @Override
    public SqlFunction<ResultSet, DjangoSession> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}