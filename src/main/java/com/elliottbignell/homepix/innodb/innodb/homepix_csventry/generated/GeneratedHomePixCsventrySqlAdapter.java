package com.elliottbignell.homepix.innodb.innodb.homepix_csventry.generated;

import com.elliottbignell.homepix.innodb.innodb.homepix_csventry.HomePixCsventry;
import com.elliottbignell.homepix.innodb.innodb.homepix_csventry.HomePixCsventryImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

import static com.speedment.common.injector.State.RESOLVED;
import static com.speedment.runtime.core.util.ResultSetUtil.*;

/**
 * The generated Sql Adapter for a {@link
 * com.elliottbignell.homepix.innodb.innodb.homepix_csventry.HomePixCsventry}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedHomePixCsventrySqlAdapter implements SqlAdapter<HomePixCsventry> {
    
    private final TableIdentifier<HomePixCsventry> tableIdentifier;
    
    protected GeneratedHomePixCsventrySqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("innodb", "innodb", "homePIX_csventry");
    }
    
    protected HomePixCsventry apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
            .setId(                getInt(resultSet, 1 + offset))
            .setFilename(          resultSet.getString(2 + offset))
            .setImageRef(          resultSet.getString(3 + offset))
            .setCaption(           resultSet.getString(4 + offset))
            .setTags(              resultSet.getString(5 + offset))
            .setLicenseType(       resultSet.getString(6 + offset))
            .setUserName(          resultSet.getString(7 + offset))
            .setSuperTags(         resultSet.getString(8 + offset))
            .setLocation(          resultSet.getString(9 + offset))
            .setNumberOfPeople(    getByte(resultSet, 10 + offset))
            .setModelRelease(      resultSet.getString(11 + offset))
            .setIsThereProperty(   resultSet.getString(12 + offset))
            .setPropertyRelease(   resultSet.getString(13 + offset))
            .setPrimaryCategory(   resultSet.getString(14 + offset))
            .setSecondaryCategory( resultSet.getString(15 + offset))
            .setImageType(         resultSet.getString(16 + offset))
            .setExclusiveToAlamy(  resultSet.getString(17 + offset))
            .setAdditionalInfo(    resultSet.getString(18 + offset))
            .setStatus(            resultSet.getString(19 + offset))
            .setDateTaken(         resultSet.getString(20 + offset))
            ;
    }
    
    protected HomePixCsventryImpl createEntity() {
        return new HomePixCsventryImpl();
    }
    
    @Override
    public TableIdentifier<HomePixCsventry> identifier() {
        return tableIdentifier;
    }
    
    @Override
    public SqlFunction<ResultSet, HomePixCsventry> entityMapper() {
        return entityMapper(0);
    }
    
    @Override
    public SqlFunction<ResultSet, HomePixCsventry> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}