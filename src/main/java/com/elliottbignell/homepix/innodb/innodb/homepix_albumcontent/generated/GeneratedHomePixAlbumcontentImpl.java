package com.elliottbignell.homepix.innodb.innodb.homepix_albumcontent.generated;

import com.elliottbignell.homepix.innodb.innodb.homepix_albumcontent.HomePixAlbumcontent;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;

import java.util.Objects;
import java.util.Optional;
import java.util.OptionalInt;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.elliottbignell.homepix.innodb.innodb.homepix_albumcontent.HomePixAlbumcontent}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedHomePixAlbumcontentImpl implements HomePixAlbumcontent {
    
    private Short id;
    private Byte albumId;
    private Integer entryId;
    
    protected GeneratedHomePixAlbumcontentImpl() {}
    
    @Override
    public Optional<Short> getId() {
        return Optional.ofNullable(id);
    }
    
    @Override
    public Optional<Byte> getAlbumId() {
        return Optional.ofNullable(albumId);
    }
    
    @Override
    public OptionalInt getEntryId() {
        return OptionalUtil.ofNullable(entryId);
    }
    
    @Override
    public HomePixAlbumcontent setId(Short id) {
        this.id = id;
        return this;
    }
    
    @Override
    public HomePixAlbumcontent setAlbumId(Byte albumId) {
        this.albumId = albumId;
        return this;
    }
    
    @Override
    public HomePixAlbumcontent setEntryId(Integer entryId) {
        this.entryId = entryId;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "      + Objects.toString(OptionalUtil.unwrap(getId())));
        sj.add("albumId = " + Objects.toString(OptionalUtil.unwrap(getAlbumId())));
        sj.add("entryId = " + Objects.toString(OptionalUtil.unwrap(getEntryId())));
        return "HomePixAlbumcontentImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof HomePixAlbumcontent)) { return false; }
        final HomePixAlbumcontent thatHomePixAlbumcontent = (HomePixAlbumcontent)that;
        if (!Objects.equals(this.getId(), thatHomePixAlbumcontent.getId())) { return false; }
        if (!Objects.equals(this.getAlbumId(), thatHomePixAlbumcontent.getAlbumId())) { return false; }
        if (!Objects.equals(this.getEntryId(), thatHomePixAlbumcontent.getEntryId())) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getId()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getAlbumId()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getEntryId()));
        return hash;
    }
}