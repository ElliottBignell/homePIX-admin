package com.elliottbignell.homepix.innodb.innodb.homepix_picturefile.generated;

import com.elliottbignell.homepix.innodb.innodb.homepix_picturefile.HomePixPicturefile;
import com.elliottbignell.homepix.innodb.innodb.homepix_picturefile.HomePixPicturefileImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

import static com.speedment.common.injector.State.RESOLVED;
import static com.speedment.runtime.core.util.ResultSetUtil.*;

/**
 * The generated Sql Adapter for a {@link
 * com.elliottbignell.homepix.innodb.innodb.homepix_picturefile.HomePixPicturefile}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedHomePixPicturefileSqlAdapter implements SqlAdapter<HomePixPicturefile> {
    
    private final TableIdentifier<HomePixPicturefile> tableIdentifier;
    
    protected GeneratedHomePixPicturefileSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("innodb", "innodb", "homePIX_picturefile");
    }
    
    protected HomePixPicturefile apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
            .setId(                getInt(resultSet, 1 + offset))
            .setFile(              resultSet.getString(2 + offset))
            .setTitle(             resultSet.getString(3 + offset))
            .setSortkey(           getLong(resultSet, 4 + offset))
            .setAddedOn(           resultSet.getTimestamp(5 + offset))
            .setTakenOn(           resultSet.getTimestamp(6 + offset))
            .setLastModified(      resultSet.getTimestamp(7 + offset))
            .setLocation(          resultSet.getString(8 + offset))
            .setPrimaryCategory(   resultSet.getString(9 + offset))
            .setSecondaryCategory( resultSet.getString(10 + offset))
            .setKeywordsId(        getInt(resultSet, 11 + offset))
            .setPathId(            getShort(resultSet, 12 + offset))
            .setHits(              getByte(resultSet, 13 + offset))
            ;
    }
    
    protected HomePixPicturefileImpl createEntity() {
        return new HomePixPicturefileImpl();
    }
    
    @Override
    public TableIdentifier<HomePixPicturefile> identifier() {
        return tableIdentifier;
    }
    
    @Override
    public SqlFunction<ResultSet, HomePixPicturefile> entityMapper() {
        return entityMapper(0);
    }
    
    @Override
    public SqlFunction<ResultSet, HomePixPicturefile> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}