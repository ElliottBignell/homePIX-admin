package com.elliottbignell.homepix.innodb.innodb.django_migrations.generated;

import com.elliottbignell.homepix.innodb.innodb.django_migrations.DjangoMigrations;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;

import java.sql.Timestamp;
import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.elliottbignell.homepix.innodb.innodb.django_migrations.DjangoMigrations}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedDjangoMigrationsImpl implements DjangoMigrations {
    
    private Byte id;
    private String app;
    private String name;
    private Timestamp applied;
    
    protected GeneratedDjangoMigrationsImpl() {}
    
    @Override
    public Optional<Byte> getId() {
        return Optional.ofNullable(id);
    }
    
    @Override
    public Optional<String> getApp() {
        return Optional.ofNullable(app);
    }
    
    @Override
    public Optional<String> getName() {
        return Optional.ofNullable(name);
    }
    
    @Override
    public Optional<Timestamp> getApplied() {
        return Optional.ofNullable(applied);
    }
    
    @Override
    public DjangoMigrations setId(Byte id) {
        this.id = id;
        return this;
    }
    
    @Override
    public DjangoMigrations setApp(String app) {
        this.app = app;
        return this;
    }
    
    @Override
    public DjangoMigrations setName(String name) {
        this.name = name;
        return this;
    }
    
    @Override
    public DjangoMigrations setApplied(Timestamp applied) {
        this.applied = applied;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "      + Objects.toString(OptionalUtil.unwrap(getId())));
        sj.add("app = "     + Objects.toString(OptionalUtil.unwrap(getApp())));
        sj.add("name = "    + Objects.toString(OptionalUtil.unwrap(getName())));
        sj.add("applied = " + Objects.toString(OptionalUtil.unwrap(getApplied())));
        return "DjangoMigrationsImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof DjangoMigrations)) { return false; }
        final DjangoMigrations thatDjangoMigrations = (DjangoMigrations)that;
        if (!Objects.equals(this.getId(), thatDjangoMigrations.getId())) { return false; }
        if (!Objects.equals(this.getApp(), thatDjangoMigrations.getApp())) { return false; }
        if (!Objects.equals(this.getName(), thatDjangoMigrations.getName())) { return false; }
        if (!Objects.equals(this.getApplied(), thatDjangoMigrations.getApplied())) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getId()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getApp()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getName()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getApplied()));
        return hash;
    }
}