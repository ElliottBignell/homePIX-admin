package com.elliottbignell.homepix.innodb.innodb.homepix_comment.generated;

import com.elliottbignell.homepix.innodb.innodb.homepix_comment.HomePixComment;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;

import java.sql.Timestamp;
import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.elliottbignell.homepix.innodb.innodb.homepix_comment.HomePixComment}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedHomePixCommentImpl implements HomePixComment {
    
    private Byte id;
    private String author;
    private String text;
    private Timestamp createDate;
    private Byte approvedComment;
    private Short postId;
    
    protected GeneratedHomePixCommentImpl() {}
    
    @Override
    public Optional<Byte> getId() {
        return Optional.ofNullable(id);
    }
    
    @Override
    public Optional<String> getAuthor() {
        return Optional.ofNullable(author);
    }
    
    @Override
    public Optional<String> getText() {
        return Optional.ofNullable(text);
    }
    
    @Override
    public Optional<Timestamp> getCreateDate() {
        return Optional.ofNullable(createDate);
    }
    
    @Override
    public Optional<Byte> getApprovedComment() {
        return Optional.ofNullable(approvedComment);
    }
    
    @Override
    public Optional<Short> getPostId() {
        return Optional.ofNullable(postId);
    }
    
    @Override
    public HomePixComment setId(Byte id) {
        this.id = id;
        return this;
    }
    
    @Override
    public HomePixComment setAuthor(String author) {
        this.author = author;
        return this;
    }
    
    @Override
    public HomePixComment setText(String text) {
        this.text = text;
        return this;
    }
    
    @Override
    public HomePixComment setCreateDate(Timestamp createDate) {
        this.createDate = createDate;
        return this;
    }
    
    @Override
    public HomePixComment setApprovedComment(Byte approvedComment) {
        this.approvedComment = approvedComment;
        return this;
    }
    
    @Override
    public HomePixComment setPostId(Short postId) {
        this.postId = postId;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "              + Objects.toString(OptionalUtil.unwrap(getId())));
        sj.add("author = "          + Objects.toString(OptionalUtil.unwrap(getAuthor())));
        sj.add("text = "            + Objects.toString(OptionalUtil.unwrap(getText())));
        sj.add("createDate = "      + Objects.toString(OptionalUtil.unwrap(getCreateDate())));
        sj.add("approvedComment = " + Objects.toString(OptionalUtil.unwrap(getApprovedComment())));
        sj.add("postId = "          + Objects.toString(OptionalUtil.unwrap(getPostId())));
        return "HomePixCommentImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof HomePixComment)) { return false; }
        final HomePixComment thatHomePixComment = (HomePixComment)that;
        if (!Objects.equals(this.getId(), thatHomePixComment.getId())) { return false; }
        if (!Objects.equals(this.getAuthor(), thatHomePixComment.getAuthor())) { return false; }
        if (!Objects.equals(this.getText(), thatHomePixComment.getText())) { return false; }
        if (!Objects.equals(this.getCreateDate(), thatHomePixComment.getCreateDate())) { return false; }
        if (!Objects.equals(this.getApprovedComment(), thatHomePixComment.getApprovedComment())) { return false; }
        if (!Objects.equals(this.getPostId(), thatHomePixComment.getPostId())) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getId()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getAuthor()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getText()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getCreateDate()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getApprovedComment()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getPostId()));
        return hash;
    }
}