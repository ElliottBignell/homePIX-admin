package com.elliottbignell.homepix.innodb.innodb.homepix_csvcontent.generated;

import com.elliottbignell.homepix.innodb.innodb.homepix_csvcontent.HomePixCsvcontent;
import com.elliottbignell.homepix.innodb.innodb.homepix_csvcontent.HomePixCsvcontentImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

import static com.speedment.common.injector.State.RESOLVED;
import static com.speedment.runtime.core.util.ResultSetUtil.*;

/**
 * The generated Sql Adapter for a {@link
 * com.elliottbignell.homepix.innodb.innodb.homepix_csvcontent.HomePixCsvcontent}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedHomePixCsvcontentSqlAdapter implements SqlAdapter<HomePixCsvcontent> {
    
    private final TableIdentifier<HomePixCsvcontent> tableIdentifier;
    
    protected GeneratedHomePixCsvcontentSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("innodb", "innodb", "homePIX_csvcontent");
    }
    
    protected HomePixCsvcontent apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
            .setId(            getShort(resultSet, 1 + offset))
            .setEntryId(       getInt(resultSet, 2 + offset))
            .setPicturefileId( getInt(resultSet, 3 + offset))
            ;
    }
    
    protected HomePixCsvcontentImpl createEntity() {
        return new HomePixCsvcontentImpl();
    }
    
    @Override
    public TableIdentifier<HomePixCsvcontent> identifier() {
        return tableIdentifier;
    }
    
    @Override
    public SqlFunction<ResultSet, HomePixCsvcontent> entityMapper() {
        return entityMapper(0);
    }
    
    @Override
    public SqlFunction<ResultSet, HomePixCsvcontent> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}