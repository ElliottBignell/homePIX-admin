package com.elliottbignell.homepix.innodb.innodb.django_session.generated;

import com.elliottbignell.homepix.innodb.innodb.django_session.DjangoSession;
import com.elliottbignell.homepix.innodb.innodb.django_session.DjangoSessionImpl;
import com.elliottbignell.homepix.innodb.innodb.django_session.DjangoSessionManager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.elliottbignell.homepix.innodb.innodb.django_session.DjangoSession}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedDjangoSessionManagerImpl 
extends AbstractManager<DjangoSession> 
implements GeneratedDjangoSessionManager {
    
    private final TableIdentifier<DjangoSession> tableIdentifier;
    
    protected GeneratedDjangoSessionManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("innodb", "innodb", "django_session");
    }
    
    @Override
    public DjangoSession create() {
        return new DjangoSessionImpl();
    }
    
    @Override
    public TableIdentifier<DjangoSession> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<DjangoSession>> fields() {
        return DjangoSessionManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<DjangoSession>> primaryKeyFields() {
        return Stream.empty();
    }
}