package com.elliottbignell.homepix.innodb.innodb.django_content_type.generated;

import com.elliottbignell.homepix.innodb.innodb.django_content_type.DjangoContentType;
import com.elliottbignell.homepix.innodb.innodb.django_content_type.DjangoContentTypeImpl;
import com.elliottbignell.homepix.innodb.innodb.django_content_type.DjangoContentTypeManager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.elliottbignell.homepix.innodb.innodb.django_content_type.DjangoContentType}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedDjangoContentTypeManagerImpl 
extends AbstractManager<DjangoContentType> 
implements GeneratedDjangoContentTypeManager {
    
    private final TableIdentifier<DjangoContentType> tableIdentifier;
    
    protected GeneratedDjangoContentTypeManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("innodb", "innodb", "django_content_type");
    }
    
    @Override
    public DjangoContentType create() {
        return new DjangoContentTypeImpl();
    }
    
    @Override
    public TableIdentifier<DjangoContentType> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<DjangoContentType>> fields() {
        return DjangoContentTypeManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<DjangoContentType>> primaryKeyFields() {
        return Stream.empty();
    }
}