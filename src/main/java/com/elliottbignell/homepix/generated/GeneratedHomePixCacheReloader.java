package com.elliottbignell.homepix.generated;

import com.elliottbignell.homepix.innodb.innodb.albumview.generated.GeneratedAlbumViewCacheHolder;
import com.elliottbignell.homepix.innodb.innodb.auth_group.generated.GeneratedAuthGroupCacheHolder;
import com.elliottbignell.homepix.innodb.innodb.auth_group_permissions.generated.GeneratedAuthGroupPermissionsCacheHolder;
import com.elliottbignell.homepix.innodb.innodb.auth_permission.generated.GeneratedAuthPermissionCacheHolder;
import com.elliottbignell.homepix.innodb.innodb.auth_user.generated.GeneratedAuthUserCacheHolder;
import com.elliottbignell.homepix.innodb.innodb.auth_user_groups.generated.GeneratedAuthUserGroupsCacheHolder;
import com.elliottbignell.homepix.innodb.innodb.auth_user_user_permissions.generated.GeneratedAuthUserUserPermissionsCacheHolder;
import com.elliottbignell.homepix.innodb.innodb.calendarview.generated.GeneratedCalendarViewCacheHolder;
import com.elliottbignell.homepix.innodb.innodb.captcha_captchastore.generated.GeneratedCaptchaCaptchastoreCacheHolder;
import com.elliottbignell.homepix.innodb.innodb.django_admin_log.generated.GeneratedDjangoAdminLogCacheHolder;
import com.elliottbignell.homepix.innodb.innodb.django_content_type.generated.GeneratedDjangoContentTypeCacheHolder;
import com.elliottbignell.homepix.innodb.innodb.django_migrations.generated.GeneratedDjangoMigrationsCacheHolder;
import com.elliottbignell.homepix.innodb.innodb.django_session.generated.GeneratedDjangoSessionCacheHolder;
import com.elliottbignell.homepix.innodb.innodb.homepix_album.generated.GeneratedHomePixAlbumCacheHolder;
import com.elliottbignell.homepix.innodb.innodb.homepix_albumcontent.generated.GeneratedHomePixAlbumcontentCacheHolder;
import com.elliottbignell.homepix.innodb.innodb.homepix_comment.generated.GeneratedHomePixCommentCacheHolder;
import com.elliottbignell.homepix.innodb.innodb.homepix_csvcontent.generated.GeneratedHomePixCsvcontentCacheHolder;
import com.elliottbignell.homepix.innodb.innodb.homepix_csventry.generated.GeneratedHomePixCsventryCacheHolder;
import com.elliottbignell.homepix.innodb.innodb.homepix_directory.generated.GeneratedHomePixDirectoryCacheHolder;
import com.elliottbignell.homepix.innodb.innodb.homepix_keywords.generated.GeneratedHomePixKeywordsCacheHolder;
import com.elliottbignell.homepix.innodb.innodb.homepix_picturefile.generated.GeneratedHomePixPicturefileCacheHolder;
import com.elliottbignell.homepix.innodb.innodb.imports.generated.GeneratedImportsCacheHolder;
import com.elliottbignell.homepix.innodb.innodb.sqlite_sequence.generated.GeneratedSqliteSequenceCacheHolder;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.enterprise.datastore.runtime.DataStoreHolder;
import com.speedment.enterprise.datastore.runtime.DataStoreReloader;
import com.speedment.enterprise.datastore.runtime.util.DataStoreHolderUtil;
import com.speedment.runtime.core.component.StreamSupplierComponent;

import java.util.concurrent.CompletableFuture;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorService;

/**
 * A reloader that loads updates from a stream source and creates a new holder
 * for that state.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedHomePixCacheReloader implements DataStoreReloader {
    
    @Override
    public DataStoreHolder reload(StreamSupplierComponent streamSupplier, ExecutorService executor) {
        final CompletableFuture<GeneratedAlbumViewCacheHolder> albumViewHolder                              = GeneratedAlbumViewCacheHolder.reload(streamSupplier, executor);
        final CompletableFuture<GeneratedAuthGroupCacheHolder> authGroupHolder                              = GeneratedAuthGroupCacheHolder.reload(streamSupplier, executor);
        final CompletableFuture<GeneratedAuthGroupPermissionsCacheHolder> authGroupPermissionsHolder        = GeneratedAuthGroupPermissionsCacheHolder.reload(streamSupplier, executor);
        final CompletableFuture<GeneratedAuthPermissionCacheHolder> authPermissionHolder                    = GeneratedAuthPermissionCacheHolder.reload(streamSupplier, executor);
        final CompletableFuture<GeneratedAuthUserCacheHolder> authUserHolder                                = GeneratedAuthUserCacheHolder.reload(streamSupplier, executor);
        final CompletableFuture<GeneratedAuthUserGroupsCacheHolder> authUserGroupsHolder                    = GeneratedAuthUserGroupsCacheHolder.reload(streamSupplier, executor);
        final CompletableFuture<GeneratedAuthUserUserPermissionsCacheHolder> authUserUserPermissionsHolder  = GeneratedAuthUserUserPermissionsCacheHolder.reload(streamSupplier, executor);
        final CompletableFuture<GeneratedCalendarViewCacheHolder> calendarViewHolder                        = GeneratedCalendarViewCacheHolder.reload(streamSupplier, executor);
        final CompletableFuture<GeneratedCaptchaCaptchastoreCacheHolder> captchaCaptchastoreHolder          = GeneratedCaptchaCaptchastoreCacheHolder.reload(streamSupplier, executor);
        final CompletableFuture<GeneratedDjangoAdminLogCacheHolder> djangoAdminLogHolder                    = GeneratedDjangoAdminLogCacheHolder.reload(streamSupplier, executor);
        final CompletableFuture<GeneratedDjangoContentTypeCacheHolder> djangoContentTypeHolder              = GeneratedDjangoContentTypeCacheHolder.reload(streamSupplier, executor);
        final CompletableFuture<GeneratedDjangoMigrationsCacheHolder> djangoMigrationsHolder                = GeneratedDjangoMigrationsCacheHolder.reload(streamSupplier, executor);
        final CompletableFuture<GeneratedDjangoSessionCacheHolder> djangoSessionHolder                      = GeneratedDjangoSessionCacheHolder.reload(streamSupplier, executor);
        final CompletableFuture<GeneratedHomePixAlbumCacheHolder> homePixAlbumHolder                        = GeneratedHomePixAlbumCacheHolder.reload(streamSupplier, executor);
        final CompletableFuture<GeneratedHomePixAlbumcontentCacheHolder> homePixAlbumcontentHolder          = GeneratedHomePixAlbumcontentCacheHolder.reload(streamSupplier, executor);
        final CompletableFuture<GeneratedHomePixCommentCacheHolder> homePixCommentHolder                    = GeneratedHomePixCommentCacheHolder.reload(streamSupplier, executor);
        final CompletableFuture<GeneratedHomePixCsvcontentCacheHolder> homePixCsvcontentHolder              = GeneratedHomePixCsvcontentCacheHolder.reload(streamSupplier, executor);
        final CompletableFuture<GeneratedHomePixCsventryCacheHolder> homePixCsventryHolder                  = GeneratedHomePixCsventryCacheHolder.reload(streamSupplier, executor);
        final CompletableFuture<GeneratedHomePixDirectoryCacheHolder> homePixDirectoryHolder                = GeneratedHomePixDirectoryCacheHolder.reload(streamSupplier, executor);
        final CompletableFuture<GeneratedHomePixKeywordsCacheHolder> homePixKeywordsHolder                  = GeneratedHomePixKeywordsCacheHolder.reload(streamSupplier, executor);
        final CompletableFuture<GeneratedHomePixPicturefileCacheHolder> homePixPicturefileHolder            = GeneratedHomePixPicturefileCacheHolder.reload(streamSupplier, executor);
        final CompletableFuture<GeneratedImportsCacheHolder> importsHolder                                  = GeneratedImportsCacheHolder.reload(streamSupplier, executor);
        final CompletableFuture<GeneratedSqliteSequenceCacheHolder> sqliteSequenceHolder                    = GeneratedSqliteSequenceCacheHolder.reload(streamSupplier, executor);
        
        final DataStoreHolder holder;
        try {
            holder = new GeneratedHomePixDataStoreHolder(
                albumViewHolder.get(),
                authGroupHolder.get(),
                authGroupPermissionsHolder.get(),
                authPermissionHolder.get(),
                authUserHolder.get(),
                authUserGroupsHolder.get(),
                authUserUserPermissionsHolder.get(),
                calendarViewHolder.get(),
                captchaCaptchastoreHolder.get(),
                djangoAdminLogHolder.get(),
                djangoContentTypeHolder.get(),
                djangoMigrationsHolder.get(),
                djangoSessionHolder.get(),
                homePixAlbumHolder.get(),
                homePixAlbumcontentHolder.get(),
                homePixCommentHolder.get(),
                homePixCsvcontentHolder.get(),
                homePixCsventryHolder.get(),
                homePixDirectoryHolder.get(),
                homePixKeywordsHolder.get(),
                homePixPicturefileHolder.get(),
                importsHolder.get(),
                sqliteSequenceHolder.get()
            );
        } catch (final ExecutionException | InterruptedException ex) {
            throw new RuntimeException("Error reloading caches.", ex);
        }
        
        DataStoreHolderUtil.decorateEntityStores(holder, executor);
        return holder;
    }
}